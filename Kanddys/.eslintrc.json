{
	"root": true,
	"env": {
		"es6": true
	},
	"ignorePatterns": ["projects/**/*", "src/app/**/*.spec.ts"],
	"overrides": [
		{
			"files": ["*.ts"],
			"parserOptions": {
				"project": ["tsconfig.json"],
				"createDefaultProgram": true
			},
			"extends": [
				"plugin:@ngrx/recommended",
				"eslint:recommended",
				"plugin:@typescript-eslint/recommended",
				"plugin:@angular-eslint/recommended",
				"plugin:@angular-eslint/template/process-inline-templates",
				"plugin:prettier/recommended"
			],
			"rules": {
				"@angular-eslint/component-class-suffix": ["error"],
				"@angular-eslint/component-max-inline-declarations": [
					"error",
					{
						"template": 40,
						"styles": 40
					}
				],
				"@angular-eslint/component-selector": [
					"error",
					{
						"type": "element",
						"prefix": "app",
						"style": "kebab-case"
					}
				],
				"@angular-eslint/contextual-decorator": ["error"],
				"@angular-eslint/contextual-lifecycle": ["error"],
				"@angular-eslint/directive-class-suffix": ["error"],
				"@angular-eslint/directive-selector": [
					"error",
					{
						"type": "element",
						"prefix": "bar",
						"style": "kebab-case"
					}
				],
				"@angular-eslint/no-attribute-decorator": ["error"],
				"@angular-eslint/no-conflicting-lifecycle": ["error"],
				"@angular-eslint/no-empty-lifecycle-method": ["error"],
				"@angular-eslint/no-forward-ref": ["error"],
				"@angular-eslint/no-host-metadata-property": ["error"],
				"@angular-eslint/no-input-prefix": [
					"error",
					{
						"prefixes": ["on"]
					}
				],
				"@angular-eslint/no-input-rename": ["error"],
				"@angular-eslint/no-inputs-metadata-property": ["error"],
				"@angular-eslint/no-lifecycle-call": ["error"],
				"@angular-eslint/no-output-native": ["error"],
				"@angular-eslint/no-output-on-prefix": ["error"],
				"@angular-eslint/no-output-rename": ["error"],
				"@angular-eslint/no-outputs-metadata-property": ["error"],
				"@angular-eslint/no-pipe-impure": ["error"],
				"@angular-eslint/no-queries-metadata-property": ["error"],
				"@angular-eslint/pipe-prefix": [
					"error",
					{
						"prefixes": ["ng"]
					}
				],
				"@angular-eslint/prefer-on-push-component-change-detection": ["error"],
				"@angular-eslint/prefer-output-readonly": ["error"],
				"@angular-eslint/prefer-standalone-component": ["error"],
				"@angular-eslint/relative-url-prefix": ["error"],
				"@angular-eslint/require-localize-metadata": [
					"error",
					{
						"requireDescription": true
					}
				],
				"@angular-eslint/sort-lifecycle-methods": ["error"],
				"@angular-eslint/sort-ngmodule-metadata-arrays": ["error"],
				"@angular-eslint/use-component-selector": ["error"],
				"@angular-eslint/use-component-view-encapsulation": ["error"],
				"@angular-eslint/use-injectable-provided-in": ["error"],
				"@angular-eslint/use-lifecycle-interface": ["error"],
				"@angular-eslint/use-pipe-transform-interface": ["error"],
				"@typescript-eslint/array-type": "error",
				"@typescript-eslint/await-thenable": "error",
				"@typescript-eslint/ban-types": "error",
				"@typescript-eslint/consistent-generic-constructors": "error",
				"@typescript-eslint/consistent-type-definitions": "error",
				"@typescript-eslint/consistent-type-exports": "error",
				"@typescript-eslint/explicit-function-return-type": "error",
				"@typescript-eslint/explicit-member-accessibility": "error",
				"@typescript-eslint/explicit-module-boundary-types": "error",
				"init-declarations": "off",
				"@typescript-eslint/init-declarations": "error",
				"@typescript-eslint/member-ordering": "error",
				"@typescript-eslint/method-signature-style": "error",
				"camelcase": "off",
				"@typescript-eslint/naming-convention": [
					"error",
					{
						"selector": "default",
						"format": ["camelCase"]
					},
					{
						"selector": "variable",
						"format": ["camelCase", "UPPER_CASE"]
					},
					{
						"selector": "parameter",
						"format": ["camelCase"],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "memberLike",
						"modifiers": ["private"],
						"format": ["camelCase"],
						"leadingUnderscore": "require"
					},
					{
						"selector": "typeLike",
						"format": ["PascalCase"]
					}
				],
				"no-array-constructor": "off",
				"@typescript-eslint/no-array-constructor": "error",
				"@typescript-eslint/no-base-to-string": "error",
				"@typescript-eslint/no-confusing-non-null-assertion": "error",
				"@typescript-eslint/no-confusing-void-expression": "error",
				"@typescript-eslint/no-duplicate-enum-values": "error",
				"@typescript-eslint/no-duplicate-type-constituents": "error",
				"@typescript-eslint/no-dynamic-delete": "error",
				"no-empty-function": "off",
				"@typescript-eslint/no-empty-function": "error",
				"@typescript-eslint/no-empty-interface": "error",
				"@typescript-eslint/no-explicit-any": "error",
				"@typescript-eslint/no-extra-non-null-assertion": "error",
				"no-extra-semi": "off",
				"@typescript-eslint/no-extra-semi": "error",
				"@typescript-eslint/no-floating-promises": "error",
				"@typescript-eslint/no-for-in-array": "error",
				"no-implied-eval": "off",
				"@typescript-eslint/no-implied-eval": "error",
				"@typescript-eslint/no-invalid-void-type": "error",
				"no-loop-func": "off",
				"@typescript-eslint/no-loop-func": "error",
				"@typescript-eslint/no-meaningless-void-operator": "error",
				"@typescript-eslint/no-misused-new": "error",
				"@typescript-eslint/no-mixed-enums": "error",
				"@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
				"@typescript-eslint/no-non-null-asserted-optional-chain": "error",
				"@typescript-eslint/no-non-null-assertion": "error",
				"no-throw-literal": "off",
				"@typescript-eslint/no-throw-literal": "error",
				"@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
				"@typescript-eslint/no-unnecessary-condition": "error",
				"@typescript-eslint/no-unnecessary-qualifier": "error",
				"no-unused-expressions": "off",
				"@typescript-eslint/no-unused-expressions": "error",
				"no-unused-vars": "off",
				"@typescript-eslint/no-unused-vars": "error",
				"no-use-before-define": "off",
				"@typescript-eslint/no-use-before-define": "error",
				"no-useless-constructor": "off",
				"@typescript-eslint/no-useless-constructor": "error",
				"@typescript-eslint/no-useless-empty-export": "error",
				"@typescript-eslint/prefer-for-of": "error",
				"@typescript-eslint/prefer-function-type": "error",
				"@typescript-eslint/prefer-includes": "error",
				"@typescript-eslint/prefer-optional-chain": "error",
				"@typescript-eslint/prefer-reduce-type-parameter": "error",
				"@typescript-eslint/prefer-string-starts-ends-with": "error",
				"@typescript-eslint/promise-function-async": "error",
				"@typescript-eslint/require-array-sort-compare": "error",
				"require-await": "off",
				"@typescript-eslint/require-await": "error",
				"@typescript-eslint/restrict-plus-operands": "error",
				"no-return-await": "off",
				"@typescript-eslint/return-await": "error",
				"@typescript-eslint/sort-type-constituents": "error",
				"@typescript-eslint/switch-exhaustiveness-check": "error",
				"@typescript-eslint/unified-signatures": "error"
			}
		},
		{
			"files": ["*.html"],
			"extends": [
				"plugin:@angular-eslint/template/recommended",
				"plugin:@angular-eslint/template/accessibility",
				"plugin:prettier/recommended"
			],
			"rules": {}
		}
	]
}
